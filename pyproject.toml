[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.black]
line-length = 100

[tool.django-stubs]
django_settings_module = "intranet.settings"

[tool.flakeheaven]
exclude = [
  "*.pot",
  "*.py[co]",
  "*/env/*",
  "*/migrations/*",
  ".env",
  ".git",
  ".gitignore",
  "__pycache__",
  "venv",
]
format = "grouped"
max_line_length = 100
show_source = true

[tool.flakeheaven.exceptions."**/__init__.py"]
pyflakes = ["-F401", "-F403"]

[tool.flakeheaven.plugins]
mccabe = ["+*"]
pycodestyle = [
  "+*",
  "-E501",  # Ignore lines that are too long (Black will handle them, but it will ignore long strings, which is desired)
  "-W503", "-W504"  # Ignore line breaks around binary operators (Black will handle them)
]
pyflakes = ["+*"]
pylint = ["+*"]

[tool.isort]
profile = "black"

[tool.mypy]
check_untyped_defs = true
color_output = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
error_summary = true
follow_imports = "skip"
follow_imports_for_stubs = true
ignore_missing_imports = true
no_implicit_optional = true
plugins = [
  "mypy_django_plugin.main"
]
pretty = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = true
warn_unused_ignores = true

[tool.poetry]
authors = ["Eric Abruzzese <eric.abruzzese@gmail.com>"]
description = "The intranet application for the RGBLAN events"
license = "MIT"
name = "intranet"
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
django = "^4"
django-environ = "^0.9.0"
django-extensions = "*"
django-timezone-field = "^5.0"
ipython = "*"
python = "^3.11"
tzdata = "^2022.7"
whitenoise = {extras = ["brotli"], version = "^6.2.0"}

[tool.poetry.group.dev.dependencies]
autoflake = "*"
black = "*"
django-stubs = "*"
djhtml = "*"
flakeheaven = "*"
isort = "*"
mypy = "*"
mypy-extensions = "*"
myst-parser = "*"
pre-commit = "*"
pydocstyle = "*"
pytest = "*"
pytest-django = "*"
pytest-mock = "*"
pyupgrade = "*"
sphinx = "*"
sphinx_rtd_theme = "*"
toml-sort = "*"
werkzeug = "*"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "intranet.settings"
addopts = "--durations=10"
markers = [
  'api: mark a test as being an API test',
  'integration: mark a test as being an integration test with external dependencies'
]
norecursedirs = [
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  "__pycache__",
  "node_modules",
  "static",
  "static-files"
]
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py"
]
