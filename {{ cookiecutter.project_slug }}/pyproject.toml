[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[project]
requires-python = ">=3.12"

[tool.poetry]
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
description = "{{ cookiecutter.project_description }}"
license = "MIT"
name = "{{ cookiecutter.package_name }}"
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
celery = {extras = ["redis"], version = "^5.2.7"}
django = "^4"
django-allauth = "^0.54.0"
django-allauth-2fa = "^0.10.0"
django-celery-beat = "^2.5.0"
django-celery-results = "^2.4.0"
django-constance = {extras = ["database"], version = "^2.9.1"}
django-cors-headers = "^3.14.0"
django-debug-toolbar = "^4.0.0"
django-environ = "^0.10.0"
django-extensions = "*"
django-health-check = "^3.17.0"
django-htmx = "^1.14.0"
django-otp = "^1.1.6"
django-recaptcha = "^3.0.0"
django-redis = "^5.2.0"
django-storages = {extras = ["boto3"], version = "^1.13.2"}
django-timezone-field = "^5.0"
django-waffle = "^3.0.0"
gunicorn = {extras = ["setproctitle"], version = "^20.1.0"}
ipython = "*"
psutil = "^5.9.4"
psycopg2 = "^2.9.6"
python = "^3.11"
tzdata = "^2023.3"
uvicorn = {extras = ["standard"], version = "^0.21.1"}
whitenoise = {extras = ["brotli"], version = "^6.4.0"}

[tool.poetry.group.dev.dependencies]
celery-stubs = "^0.1.3"
django-stubs = "^1.15.0"
djhtml = "^3.0.5"
mypy = "^1.2.0"
mypy-extensions = "^1.0.0"
pre-commit = "^3.2.2"
pytest = "^7.2.2"
pytest-django = "^4.5.2"
pytest-mock = "^3.10.0"
toml-sort = "^0.23.0"
watchdog = "^3.0.0"
werkzeug = "^2.2.3"

[tool.django-stubs]
django_settings_module = "{{ cookiecutter.package_name }}.settings"

[tool.mypy]
check_untyped_defs = true
color_output = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
error_summary = true
follow_imports = "skip"
follow_imports_for_stubs = true
ignore_missing_imports = true
no_implicit_optional = true
plugins = [
  "mypy_django_plugin.main"
]
pretty = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{ cookiecutter.package_name }}.settings"
addopts = "--durations=10"
markers = [
  'api: mark a test as being an API test',
  'integration: mark a test as being an integration test with external dependencies'
]
norecursedirs = [
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  "__pycache__",
  "node_modules",
  "static",
  "static-files"
]
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py"
]

# See:
# - https://docs.astral.sh/ruff/configuration/
# - https://docs.astral.sh/ruff/settings/
# - https://docs.astral.sh/ruff/rules/
[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = []
select = ["E4", "E7", "E9", "F", "I", "UP"]

[tool.tomlsort]
all = true
in_place = true
sort_first = [
  "build-system",
  "project",
  "tool.poetry",
  "tool.poetry.dependencies",
  "tool.poetry.group.dev.dependencies"
]
