[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
description = "{{ cookiecutter.project_description }}"
license = "MIT"
name = "{{ cookiecutter.package_name }}"
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
celery = {extras = ["redis"], version = "^5.4.0"}
django = "^5.1"
django-allauth = "^64.0.0"
django-allauth-2fa = "^0.10.0"
# Pin celery beat to a commit in master until a new release is cut for Django 5.1 support.
django-celery-beat = {git = "https://github.com/celery/django-celery-beat.git", rev = "fcc4ba7"}
django-celery-results = "^2.5.1"
django-constance = {extras = ["database"], version = "^3.1.0"}
django-cors-headers = "^4.4.0"
django-debug-toolbar = "^4.4.6"
django-environ = "^0.10.0"
django-extensions = "^3.2.3"
django-health-check = "^3.18.3"
django-htmx = "^1.19.0"
django-otp = "^1.5.1"
django-recaptcha = "^4.0.0"
django-redis = "^5.4.0"
django-storages = {extras = ["boto3"], version = "^1.14.4"}
django-timezone-field = "^7.0"
django-waffle = "^4.1.0"
ipython = "^8.26.0"
psutil = "^6.0.0"
psycopg2 = "^2.9.9"
python = "^3.12"
tzdata = "^2024.1"
uvicorn = {extras = ["standard"], version = "^0.21.1"}
whitenoise = {extras = ["brotli"], version = "^6.7.0"}

[tool.poetry.group.dev.dependencies]
celery-stubs = "^0.1.3"
django-stubs = "^5.0.4"
djhtml = "^3.0.6"
mypy = "^1.11.1"
mypy-extensions = "^1.0.0"
pre-commit = "^3.8.0"
pytest = "^8.3.2"
pytest-django = "^4.8.0"
pytest-mock = "^3.14.0"
toml-sort = "^0.23.0"
watchdog = "^4.0.1"
werkzeug = "^3.0.3"

[tool.django-stubs]
django_settings_module = "{{ cookiecutter.package_name }}.settings"

[tool.mypy]
check_untyped_defs = true
color_output = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
error_summary = true
follow_imports = "skip"
follow_imports_for_stubs = true
ignore_missing_imports = true
no_implicit_optional = true
plugins = [
  "mypy_django_plugin.main"
]
pretty = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{ cookiecutter.package_name }}.settings"
addopts = "--durations=10"
markers = [
  'api: mark a test as being an API test',
  'integration: mark a test as being an integration test with external dependencies'
]
norecursedirs = [
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  "__pycache__",
  "node_modules",
  "static",
  "static-files"
]
python_files = [
  "*_tests.py",
  "test_*.py",
  "tests.py"
]

# See:
# - https://docs.astral.sh/ruff/configuration/
# - https://docs.astral.sh/ruff/settings/
# - https://docs.astral.sh/ruff/rules/
[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = []
select = ["E4", "E7", "E9", "F", "I", "UP"]

[tool.tomlsort]
all = true
in_place = true
sort_first = [
  "build-system",
  "project",
  "tool.poetry",
  "tool.poetry.dependencies",
  "tool.poetry.group.dev.dependencies"
]
